{"version":3,"file":"static/webpack/static/development/pages/index.js.8206fbf5583523585535.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport fetch from 'isomorphic-fetch'\nimport Head from '../components/Head'\n\nexport default class Home extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      code: [],\n      bill: [],\n      value: null, // value as per the code\n      increment: 20, // amount to give in\n      price: null,\n      discount: 25,\n      offerPrice: null,\n      mobile: null\n    }\n    this.map = {\n      'K': 1,\n      'E': 2,\n      'L': 3,\n      'V': 4,\n      'I': 5,\n      'N': 6,\n      'A': 7,\n      'T': 8,\n      'O': 9,\n      'R': 0\n    }\n    this.handleCode = this.handleCode.bind(this)\n    this.handleButton = this.handleButton.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleEqual = this.handleEqual.bind(this)\n    this.handleMobile = this.handleMobile.bind(this)\n    this.handleWhatsApp = this.handleWhatsApp.bind(this)\n  }\n\n  convert (code) {\n    let value = []\n    code.forEach(c => {\n      value.push(this.map[c])\n    });\n    value = parseInt(value.join(''))\n    var price = (value * (100 + this.state.increment) / 100).toFixed(2)\n    var offerPrice = (price * (100 - this.state.discount) / 100).toFixed(2)\n    this.setState({value, price, offerPrice})\n  }\n\n  handleCode (e) {\n    const code = e.target.value.toUpperCase().split('')\n    this.setState({code})\n    this.convert(code)\n  }\n\n  handleButton (e) {\n    const code = this.state.code.concat(e.target.getAttribute('value'))\n    this.setState({code})\n    this.convert(code)\n  }\n\n  handleClear () {\n    this.setState({\n      code: [],\n      price: null,\n      value: null,\n      offerPrice: null,\n      bill: []\n    })\n  }\n\n  handleAdd () {\n    if (!this.state.offerPrice) return;\n    var bill = this.state.bill.concat(parseInt(this.state.offerPrice))\n    console.log(bill)\n    this.setState({bill, code: [], value: null, price: null, offerPrice: null})\n  }\n\n  handleEqual () {\n    var sum = this.state.bill.reduce((a, b) => a+b, 0)\n    this.setState({\n      code: [],\n      price: null,\n      value: null,\n      offerPrice: sum\n    })\n  }\n\n  handleMobile (e) {\n    this.setState({\n      mobile: e.target.value\n    })\n  }\n\n  handleWhatsApp () {\n    let bill = ''\n    for (let i = 0; i < this.state.bill.length; i ++) {\n      bill += `Item ${i + 1}: **${this.state.bill[i]}**%0A`\n    }\n    bill += `Total: ${this.state.offerPrice}`\n    bill += \n    window.location.href = `https://api.whatsapp.com/send?phone=+91${this.state.mobile}&text=${bill}`\n  }\n\n  render () {\n    console.log(this.state.bill)\n    return (\n      <div id='main'>\n        <Head />\n        <div id='bill'>\n          <div className='el total'>\n            {this.state.bill.map(i => {\n              return (\n                <span key={i}>{i} + </span>\n              )\n            })}\n          </div>\n          <div className='el price'>\n            <span className='actual'><strike>{this.state.price}</strike></span>\n            <span>{this.state.offerPrice}</span>\n          </div>\n        </div>\n        <div id='calculator'>\n          <div className='item' value='A' onClick={this.handleButton}>A</div>\n          <div className='item' value='E' onClick={this.handleButton}>E</div>\n          <div className='item' value='I' onClick={this.handleButton}>I</div>\n          <div className='item passive' onClick={this.handleClear}>C</div>\n          <div className='item' value='K' onClick={this.handleButton}>K</div>\n          <div className='item' value='L' onClick={this.handleButton}>L</div>\n          <div className='item' value='N' onClick={this.handleButton}>N</div>\n          <div className='item passive' onClick={this.handleAdd}>+</div>\n          <div className='item' value='O' onClick={this.handleButton}>O</div>\n          <div className='item' value='R' onClick={this.handleButton}>R</div>\n          <div className='item' value='T' onClick={this.handleButton}>T</div>\n          <div className='item passive' onClick={this.handleWhatsApp}>W</div>\n          <div></div>\n          <div className='item' value='V' onClick={this.handleButton}>V</div>\n          <div></div>\n          <div className='item passive' onClick={this.handleEqual}>{'='}</div>\n          <div><input onChange={this.handleMobile} type='number' name='mobile' placeholder='Mobile Number' /></div>\n        </div>\n        <style jsx global>{`\n          body {\n            padding: 0;\n            margin: 0;\n            background-color: #272727;\n            color: rgba(255, 255, 255, 0.9);\n            overflow: hidden;\n          }\n          #bill {\n            height: 30vh;\n            padding: 20px;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n\n            display: grid;\n            grid-template-rows: 80% 20%;\n          }\n          .el {\n            text-align: right;\n          }\n          .total {\n            font-size: 24px;\n            color: rgba(255, 255, 255, 0.3);\n          }\n          .price {\n            font-size: 32px;\n            color: rgba(255, 255, 255, 0.9);\n          }\n          .actual {\n            padding-right: 20px;\n          }\n          #calculator {\n            height: 70vh;\n            padding: 20px;\n\n            display: grid;\n            grid-template-columns: repeat(4, 70px);\n            grid-template-rows: repeat(4, 70px);\n            grid-gap: 20px;\n          }\n          .item {\n            font-size: 24px;\n            border: 1px solid rgba(255, 255, 255, 0.2);\n            border-radius: 50%;\n            text-align: center;\n            line-height: 70px;\n            height: 70px;\n            color: white;\n          }\n          .passive {\n            background-color: rgba(255, 255, 255, 0.1);\n          }\n          input {\n            width: 300px;\n            font-size: 22px;\n            line-height: 26px;\n            padding: 4px;\n            border: none;\n            background: rgba(255, 255, 255, 0.1);\n            color: white;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AA+BA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAAA;AAAA;AAAA;AAiGA;;;;AAxMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}